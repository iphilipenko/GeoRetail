# test_simple_server.py\n\"\"\"\nüß™ –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ H3 Modal API —Å–µ—Ä–≤–µ—Ä–∞\n\"\"\"\n\nimport requests\nimport json\nfrom datetime import datetime\nimport time\n\nBASE_URL = \"http://localhost:8000\"\nTEST_H3_INDEX = \"8a1fb46622d7fff\"  # –ö–∏—ó–≤ H3-10\n\ndef test_endpoint(url, description=\"\"):\n    \"\"\"–ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç endpoint\"\"\"\n    print(f\"\\nüß™ {description}\")\n    print(f\"üì° GET {url}\")\n    \n    try:\n        start = time.time()\n        response = requests.get(url, timeout=5)\n        duration = (time.time() - start) * 1000\n        \n        print(f\"‚è±Ô∏è {duration:.0f}ms | üìä {response.status_code}\")\n        \n        if response.status_code == 200:\n            print(\"‚úÖ SUCCESS\")\n            try:\n                data = response.json()\n                if 'h3_index' in data:\n                    print(f\"üìç H3: {data.get('h3_index', '')[:12]}...\")\n                elif 'resolution' in data:\n                    print(f\"üìê H3-{data.get('resolution')}, {data.get('rings', 'N/A')} –∫—ñ–ª–µ—Ü—å\")\n                elif 'status' in data:\n                    print(f\"üìà Status: {data['status']}\")\n                elif 'h3_endpoints_available' in data:\n                    available = data['h3_endpoints_available']\n                    print(f\"üéØ H3 Endpoints: {'‚úÖ' if available else '‚ùå'}\")\n                return True\n            except:\n                print(\"‚ö†Ô∏è Not JSON\")\n                return True\n        else:\n            print(f\"‚ùå FAILED: {response.status_code}\")\n            return False\n            \n    except requests.exceptions.ConnectionError:\n        print(\"‚ùå Server not running\")\n        return False\n    except Exception as e:\n        print(f\"‚ùå Error: {e}\")\n        return False\n\ndef main():\n    print(\"üöÄ –¢–ï–°–¢ –ü–†–û–°–¢–û–ì–û H3 MODAL API –°–ï–†–í–ï–†–ê\")\n    print(f\"üåê {BASE_URL}\")\n    print(f\"üìÖ {datetime.now().strftime('%H:%M:%S')}\")\n    print(\"=\"*50)\n    \n    tests = [\n        (f\"{BASE_URL}/\", \"Root endpoint\"),\n        (f\"{BASE_URL}/health\", \"Health check\"),\n        (f\"{BASE_URL}/api/v1/database/test-connection\", \"Database test\"),\n        (f\"{BASE_URL}/api/v1/hexagon-details/coverage-calculator?resolution=10&rings=2\", \"Coverage calculator\"),\n        (f\"{BASE_URL}/api/v1/hexagon-details/analysis-preview/{TEST_H3_INDEX}?resolution=10\", \"Analysis preview\"),\n        (f\"{BASE_URL}/api/v1/hexagon-details/details/{TEST_H3_INDEX}?resolution=10\", \"Hexagon details\")\n    ]\n    \n    passed = 0\n    for url, desc in tests:\n        if test_endpoint(url, desc):\n            passed += 1\n    \n    print(\"\\n\" + \"=\"*50)\n    print(f\"üèÅ –†–ï–ó–£–õ–¨–¢–ê–¢: {passed}/{len(tests)} —Ç–µ—Å—Ç—ñ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ\")\n    \n    if passed == len(tests):\n        print(\"üéâ –í–°–Ü –¢–ï–°–¢–ò –ü–†–û–ô–®–õ–ò!\")\n        print(\"‚úÖ H3 Modal API –ø—Ä–∞—Ü—é—î\")\n        print(f\"üìö Swagger UI: {BASE_URL}/docs\")\n    elif passed >= len(tests) // 2:\n        print(\"üü° –ë–Ü–õ–¨–®–Ü–°–¢–¨ –¢–ï–°–¢–Ü–í –ü–†–û–ô–®–õ–ê\")\n        print(\"‚ö†Ô∏è –ú–æ–∂–ª–∏–≤–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è\")\n    else:\n        print(\"üî¥ –ë–ê–ì–ê–¢–û –¢–ï–°–¢–Ü–í –ü–†–û–í–ê–õ–ò–õ–û–°–Ø\")\n        print(\"üí° –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —â–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–∏–π\")\n        print(\"üí° –ö–æ–º–∞–Ω–¥–∞: python start_simple_server.py\")\n    \n    print(f\"\\nüìä –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å: {(passed/len(tests)*100):.0f}%\")\n\nif __name__ == \"__main__\":\n    main()\n